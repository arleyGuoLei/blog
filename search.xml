<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux学习笔记-2</title>
      <link href="/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/"/>
      <url>/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</url>
      <content type="html"><![CDATA[<p><strong>学习参考书籍：<a href="https://www.linuxprobe.com/" target="_blank" rel="noopener">《Linux就该这么学》</a></strong></p><blockquote><p>新手必须掌握的Linux命令：本章首先介绍系统内核和Shell终端的关系与作用，然后介绍bash解释器的4大优势并学习Linux命令的执行方法。本章还精挑细选了数十个Linux命令，它们与系统工作、系统状态、工作目录、文件、目录、打包压缩与搜索等主题相关。学习这些最基础的Linux命令，可以为今后学习更复杂的命令和服务做好必备知识铺垫。</p></blockquote><h4 id="man-获取帮助"><a href="#man-获取帮助" class="headerlink" title="man 获取帮助"></a>man 获取帮助</h4><blockquote><p>man +命令  <code>获取某条命令的帮助，比如 man ls</code></p></blockquote><ol><li>帮助文档快捷键操作</li></ol><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>空格键</td><td>向下翻一页</td></tr><tr><td>PaGe down</td><td>向下翻一页</td></tr><tr><td>PaGe up</td><td>向上翻一页</td></tr><tr><td>home</td><td>直接前往首页</td></tr><tr><td>end</td><td>直接前往尾页</td></tr><tr><td>/</td><td>从上至下搜索某个关键词，如“ /linux”</td></tr><tr><td>?</td><td>从下至上搜索某个关键词，如“ ?linux”</td></tr><tr><td>n</td><td>定位到下一个搜索到的关键词</td></tr><tr><td>N</td><td>定位到上一个搜索到的关键词</td></tr><tr><td>q</td><td>退出帮助文档</td></tr></tbody></table><ol start="2"><li>帮助文档翻译</li></ol><table><thead><tr><th>字符串</th><th>翻译</th></tr></thead><tbody><tr><td>NAME</td><td>命令的名称</td></tr><tr><td>SYNOPSIS</td><td>参数的大致使用方法</td></tr><tr><td>DESCRIPTION</td><td>介绍说明</td></tr><tr><td>EXAMPLES</td><td>演示（附带简单说明）</td></tr><tr><td>OVERVIEW</td><td>概述</td></tr><tr><td>DEFAULTS</td><td>默认的功能</td></tr><tr><td>OPTIONS</td><td>具体的可用选项（带介绍）</td></tr><tr><td>ENVIRONMENT</td><td>环境变量</td></tr><tr><td>FILES</td><td>用到的文件</td></tr><tr><td>SEE ALSO</td><td>相关的资料</td></tr><tr><td>HISTORY</td><td>维护历史与联系方式</td></tr></tbody></table><h4 id="echo-输出命令"><a href="#echo-输出命令" class="headerlink" title="echo 输出命令"></a>echo 输出命令</h4><blockquote><p>命令用于在终端输出字符串或变量提取后的值，格式为“ echo [字符串 | \$变量]”。<br>例如，把指定字符串“ i7xy.cn”输出到终端屏幕的命令为：<br>[root@linuxprobe ~]# echo i7xy.cn<br>该命令会在终端屏幕上显示如下信息：<br>i7xy.cn<br>下面，我们使用$变量的方式提取变量 SHELL 的值，并将其输出到屏幕上：<br>[root@linuxprobe ~]# echo \$SHELL  (区分大小写)<br>/bin/bash</p></blockquote><h4 id="date-时间命令"><a href="#date-时间命令" class="headerlink" title="date 时间命令"></a>date 时间命令</h4><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>%t</td><td>跳格[Tab 键]</td></tr><tr><td>%H</td><td>小时（00～23）</td></tr><tr><td>%I</td><td>小时（00～12）</td></tr><tr><td>%M</td><td>分钟（00～59）</td></tr><tr><td>%S</td><td>秒（00～59）</td></tr><tr><td>%j</td><td>今年中的第几天</td></tr></tbody></table><ol><li>现在的时间</li></ol><blockquote><p>arley@arley-PC:~$ date<br>2018年 08月 09日 星期四 20:51:17 CST</p></blockquote><ol start="2"><li>按照“年-月-日 小时:分钟:秒”的格式查看当前系统时间</li></ol><blockquote><p>arley@arley-PC:~$ date “+%Y-%m-%d %H:%M:%S 今年中的第%j天”<br>2018-08-09 20:53:55 今年中的第221天</p></blockquote><ol start="3"><li>将系统的当前时间设置为 2017 年 9 月 1 日 8 点 30 分的 date 命令如下所示：</li></ol><blockquote><p>arley@arley-PC:~$ date -s “20170901 8:30:00”<br>Fri Sep 1 08:30:00 CST 2017</p></blockquote><h4 id="系统电源"><a href="#系统电源" class="headerlink" title="系统电源"></a>系统电源</h4><ol><li>重启 reboot</li><li>关机 poweroff</li></ol><h4 id="wget-下载操作"><a href="#wget-下载操作" class="headerlink" title="wget 下载操作"></a>wget 下载操作</h4><blockquote><p>arley@arley-PC:~/Downloads$ wget <a href="http://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">http://www.linuxprobe.com/docs/LinuxProbe.pdf</a><br>–2018-08-09 21:01:17–  <a href="http://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">http://www.linuxprobe.com/docs/LinuxProbe.pdf</a><br>正在解析主机 <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">www.linuxprobe.com</a> (<a href="http://www.linuxprobe.com).." target="_blank" rel="noopener">www.linuxprobe.com)..</a>. 124.193.226.211, 124.193.226.219, 124.193.226.220, …<br>正在连接 <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">www.linuxprobe.com</a> (<a href="http://www.linuxprobe.com)|124.193.226.211|:80.." target="_blank" rel="noopener">www.linuxprobe.com)|124.193.226.211|:80..</a>. 已连接。<br>已发出 HTTP 请求，正在等待回应… 301 Moved Permanently<br>位置：<a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">https://www.linuxprobe.com/docs/LinuxProbe.pdf</a> [跟随至新的 URL]<br>–2018-08-09 21:01:17–  <a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">https://www.linuxprobe.com/docs/LinuxProbe.pdf</a><br>正在连接 <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">www.linuxprobe.com</a> (<a href="http://www.linuxprobe.com)|124.193.226.211|:443.." target="_blank" rel="noopener">www.linuxprobe.com)|124.193.226.211|:443..</a>. 已连接。<br>已发出 HTTP 请求，正在等待回应… 200 OK<br>长度：20105266 (19M) [application/pdf]<br>正在保存至: “LinuxProbe.pdf”<br>LinuxProbe.pdf             100%[========================================&gt;]  19.17M  2.06MB/s  用时 8.6s<br>2018-08-09 21:01:26 (2.24 MB/s) - 已保存 “LinuxProbe.pdf” [20105266/20105266])</p></blockquote><blockquote><p>接下来，我们使用 wget 命令递归下载 <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">www.linuxprobe.com</a> 网站内的所有页面数据以及<br>文件，下载完后会自动保存到当前路径下一个名为 <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">www.linuxprobe.com</a> 的目录中。执行该操<br>作的命令为 wget -r -p <a href="http://www.linuxprobe.com，该命令的执行结果如下。" target="_blank" rel="noopener">http://www.linuxprobe.com，该命令的执行结果如下。</a><br>[root@linuxprobe ~]# wget -r -p <a href="http://www.linuxprobe.com" target="_blank" rel="noopener">http://www.linuxprobe.com</a><br>–2017-08-24 19:31:41– <a href="http://www.linuxprobe.com/" target="_blank" rel="noopener">http://www.linuxprobe.com/</a><br>Resolving <a href="http://www.linuxprobe.com.." target="_blank" rel="noopener">www.linuxprobe.com..</a>. 106.185.25.197<br>Connecting to <a href="http://www.linuxprobe.com|106.185.25.197|:80.." target="_blank" rel="noopener">www.linuxprobe.com|106.185.25.197|:80..</a>. connected.<br>HTTP request sent, awaiting response… 200 OK<br>Length: unspecified [text/html]<br>Saving to: ‘<a href="http://www.linuxprobe.com/index.html&#39;" target="_blank" rel="noopener">www.linuxprobe.com/index.html&#39;</a><br>………………省略下载过程………………</p></blockquote><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>-b</td><td>后台下载模式</td></tr><tr><td>-P</td><td>下载到指定目录</td></tr><tr><td>-t</td><td>最大尝试次数</td></tr><tr><td>-c</td><td>断点续传</td></tr><tr><td>-p</td><td>下载页面内所有资源，包括图片、视频等</td></tr><tr><td>-r</td><td>递归下载</td></tr></tbody></table><h4 id="进程管理显示"><a href="#进程管理显示" class="headerlink" title="进程管理显示"></a>进程管理显示</h4><ol><li>初级：ps</li><li>类似win的进程管理：top</li><li>pidof 命令<blockquote><p>用于查询某个指定服务进程的 PID 值，格式为“ pidof [参数] [服务名称]”。<br>每个进程的进程号码值（PID）是唯一的，因此可以通过 PID 来区分不同的进程。例如，<br>可以使用如下命令来查询本机上 sshd 服务程序的 PID：<br>[root@linuxprobe ~]# pidof sshd<br>2156</p></blockquote></li><li>kill：</li></ol><blockquote><p>kill 命令用于终止某个指定 PID 的服务进程，格式为“ kill [参数] [进程 PID]”。<br>接下来，我们使用 kill 命令把上面用 pidof 命令查询到的 PID 所代表的进程终止掉，其命<br>令如下所示。这种操作的效果等同于强制停止 sshd 服务。</p></blockquote><ol start="5"><li>killall</li></ol><blockquote><p>killall 命令用于终止某个指定名称的服务所对应的全部进程，格式为：“ killall [参数] [服<br>务名称]”。<br>通常来讲，复杂软件的服务程序会有多个进程协同为用户提供服务，如果逐个去结束这<br>些进程会比较麻烦，此时可以使用 killall 命令来批量结束某个服务程序带有的全部进程。</p></blockquote><p>例如：</p><blockquote><p>[root@linuxprobe ~]# pidof httpd<br>13581 13580 13579 13578 13577 13576<br>[root@linuxprobe ~]# killall httpd<br>[root@linuxprobe ~]# pidof httpd<br>[root@linuxprobe ~]#</p></blockquote><h4 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h4><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>ifconfig</td><td>获取获取网卡配置与网络状态</td></tr><tr><td>uname</td><td>查看系统内核与系统版本（附录1）</td></tr><tr><td>uptime</td><td>系统负载（附录2）</td></tr><tr><td>free -h</td><td>用于显示当前系统中内存的使用量信息</td></tr><tr><td>who</td><td>查看当前登入主机的用户终端信息</td></tr><tr><td>history</td><td>运行的命令历史 ！+num 可以执行指定</td></tr><tr><td>history -c</td><td>　情况命令历史</td></tr></tbody></table><p>附录1</p><blockquote><p>arley@arley-PC:~/Downloads$ uname -a<br>Linux arley-PC 4.15.0-21deepin-generic #21 SMP Mon May 21 05:20:09 UTC 2018 x86_64 GNU/Linux</p></blockquote><p>附录2</p><blockquote><p>uptime 命令真的很棒，它可以显示当前系统时间、系统已运行时间、启用终端数量以<br>及平均负载值等信息。平均负载值指的是系统在最近 1 分钟、 5 分钟、 15 分钟内的压力情<br>况（下面加粗的信息部分）；负载值越低越好，尽量不要长期超过 1，在生产环境中不要超<br>过 5。</p></blockquote><p><code>Linux 系统中以点（.）开头的文件均代表隐藏文件，这些文件大多数为系统服务文件，可以用 cat 命令查看其文件内容。</code></p><h4 id="工作目录切换命令"><a href="#工作目录切换命令" class="headerlink" title="工作目录切换命令"></a>工作目录切换命令</h4><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>pwd</td><td>当前工作目录</td></tr><tr><td>cd -</td><td>返回上一次目录</td></tr><tr><td>cd ..</td><td>上级目录</td></tr><tr><td>cd ~</td><td>家目录</td></tr><tr><td>ls -al</td><td>查看目录下的文件及信息</td></tr></tbody></table><h4 id="文本编辑命令"><a href="#文本编辑命令" class="headerlink" title="文本编辑命令"></a>文本编辑命令</h4><blockquote><p>暂时用不到，省略　－　ｄｉｆｆ可以比较文本差异</p></blockquote><h4 id="文件目录管理命令"><a href="#文件目录管理命令" class="headerlink" title="文件目录管理命令"></a>文件目录管理命令</h4><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>touch</td><td>新建文件或者修改文件的某些参数[附录１]</td></tr><tr><td>mkdir</td><td>创建目录（附录2）</td></tr><tr><td>cp [选项] 源文件 目标文件</td><td>复制文件</td></tr><tr><td>mv [选项] 源文件 [目标路径\</td><td>目标文件名]</td><td>剪切文件或将文件重命名</td></tr><tr><td>rm</td><td>删除文件</td></tr><tr><td>dd (没深入研究)</td><td>照指定大小和个数的数据块来复制文件或转换文件</td></tr><tr><td>file</td><td>查看文件类型 </td></tr></tbody></table><p>附录１</p><blockquote><p>touch -d “2017-05-04 15:44” anaconda-ks.cfg<br>-a 仅修改“读取时间”（atime）<br>-m 仅修改“修改时间”（mtime）<br>-d 同时修改 atime 与 mtime</p></blockquote><p>附录2</p><blockquote><p>在 Linux 系统中，文件夹是最常见的文件类型之一。除了能创建单个空白目录外， mkdir<br>命令还可以结合-p 参数来递归创建出具有嵌套叠层关系的文件目录。<br>mkdir -p a/b/c/d/e</p></blockquote><h4 id="打包压缩"><a href="#打包压缩" class="headerlink" title="打包压缩"></a>打包压缩</h4><ol><li>tar 命令用于对文件进行打包压缩或解压，格式为“ tar [选项] [文件]”。<br>在 Linux 系统中，常见的文件格式比较多，其中主要使用的是.tar 或.tar.gz 或.tar.bz2 格式</li></ol><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>-c</td><td>创建压缩文件</td></tr><tr><td>-x</td><td>解开压缩文件</td></tr><tr><td>-t</td><td>查看压缩包内有哪些文件</td></tr><tr><td>-z</td><td>用 Gzip 压缩或解压</td></tr><tr><td>-j</td><td>用 bzip2 压缩或解压</td></tr><tr><td>-v</td><td>显示压缩或解压的过程</td></tr><tr><td>-f</td><td>目标文件名</td></tr><tr><td>-p</td><td>保留原始的权限与属性</td></tr><tr><td>-P</td><td>使用绝对路径来压缩</td></tr><tr><td>-C</td><td>指定解压到的目录</td></tr></tbody></table><p>压缩：<strong>tar -czvf 压缩包名称.tar.gz 要打包的目录</strong><br>解压：<strong>tar -xzvf 压缩包名称.tar.gz</strong></p><blockquote><p>首先， -c 参数用于创建压缩文件， -x 参数用于解压文件，因此这两个参数不能同时使用。<br>其次， -z 参数指定使用 Gzip 格式来压缩或解压文件， -j 参数指定使用 bzip2 格式来压缩或解压文件。用户使用时则是根据文件的后缀来决定应使用何种格式参数进行解压。在执行某些压缩或解压操作时，可能需要花费数个小时，如果屏幕一直没有输出，您一方面不好判断打包的进度情况，另一方面也会怀疑电脑死机了，因此非常推荐使用-v 参数向用户不断显示压缩或解压的过程。 -C 参数用于指定要解压到哪个指定的目录。 -f 参数特别重要，它必须放到参数的最后一位，代表要压缩或解压的软件包名称。一般使用“ <strong>tar -czvf 压缩包名称.tar.gz 要打包的目录</strong>”命令把指定的文件进行打包压缩；相应的解压命令为“<strong>tar -xzvf 压缩包名称.tar.gz</strong>”。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux学习笔记-常用</title>
      <link href="/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B8%B8%E7%94%A8/"/>
      <url>/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%B8%B8%E7%94%A8/</url>
      <content type="html"><![CDATA[<h4 id="apg-get常用命令（安装deb包）"><a href="#apg-get常用命令（安装deb包）" class="headerlink" title="apg-get常用命令（安装deb包）"></a>apg-get常用命令（安装deb包）</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>apt-cache search package</td><td>搜索软件包</td></tr><tr><td>apt-cache show package</td><td>获取包的相关信息，如说明、大小、版本等</td></tr><tr><td>sudo apt-get install package</td><td>安装安装包</td></tr><tr><td>sudo apt-get install package –reinstall</td><td>重新安装包</td></tr><tr><td>sudo apt-get -f install</td><td>修复安装</td></tr><tr><td>sudo apt-get remove package</td><td>删除包</td></tr><tr><td>sudo apt-get remove package –purge</td><td>删除包，包括配置文件等</td></tr><tr><td>sudo apt-get update</td><td>更新源</td></tr><tr><td>sudo apt-get upgrade</td><td>更新已安装的包</td></tr><tr><td>sudo apt-get dist-upgrade</td><td>升级系统</td></tr><tr><td>apt-cache depends package</td><td>了解使用该包依赖那些包</td></tr><tr><td>apt-cache rdepends package</td><td>查看该包被哪些包依赖</td></tr><tr><td>sudo apt-get build-dep package</td><td>安装相关的编译环境</td></tr><tr><td>apt-get source package</td><td>下载该包的源代码</td></tr><tr><td>sudo apt-get clean &amp;&amp; sudo apt-get autoclean</td><td>清理无用的包</td></tr><tr><td>sudo apt-get check</td><td>检查是否有损坏的依赖</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux学习笔记-1</title>
      <link href="/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
      <url>/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
      <content type="html"><![CDATA[<p><strong>学习参考书籍：<a href="https://www.linuxprobe.com/" target="_blank" rel="noopener">《Linux就该这么学》</a></strong></p><blockquote><p>部署虚拟环境安装Linux系统：从零基础详细讲解了虚拟机软件与红帽Linux系统，完整演示了VM虚拟机的安装与配置过程，以及红帽RHEL 7系统的安装、配置过程和初始化方法。此外，本章还涵盖了在Linux系统中找回root管理员密码、RPM与Yum软件仓库的知识，以及RHEL 7系统中systemd初始化进程的特色与使用方法。</p></blockquote><h4 id="重设root管理员密码"><a href="#重设root管理员密码" class="headerlink" title="重设root管理员密码"></a>重设root管理员密码</h4><blockquote><p>进入到系统的紧急求援模式</p><pre><code>mount -o remount,rw /sysrootchroot /sysrootpasswdtouch /.autorelabelexitreboot</code></pre></blockquote><p><strong><code>RPM是为了简化安装的复杂度，而Yum软件仓库是为了解决软件包之间的依赖关系。</code></strong></p><h4 id="RPM（红帽软件包管理器）"><a href="#RPM（红帽软件包管理器）" class="headerlink" title="RPM（红帽软件包管理器）"></a>RPM（红帽软件包管理器）</h4><blockquote><p>在RPM（红帽软件包管理器）公布之前，要想在Linux系统中安装软件只能采取源码包的方式安装。早期在Linux系统中安装程序是一件非常困难、耗费耐心的事情，而且大多数的服务程序仅仅提供源代码，需要运维人员自行编译代码并解决许多的软件依赖关系，因此要安装好一个服务程序，运维人员需要具备丰富知识、高超的技能，甚至良好的耐心。而且在安装、升级、卸载服务程序时还要考虑到其他程序、库的依赖关系，所以在进行校验、安装、卸载、查询、升级等管理软件操作时难度都非常大。<br>RPM机制则为解决这些问题而设计的。RPM有点像Windows系统中的控制面板，会建立统一的数据库文件，详细记录软件信息并能够自动分析依赖关系。目前RPM的优势已经被公众所认可，使用范围也已不局限在红帽系统中了。</p></blockquote><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>安装软件的命令格式</td><td>rpm -ivh filename.rpm</td></tr><tr><td>升级软件的命令格式</td><td>rpm -Uvh filename.rpm</td></tr><tr><td>卸载软件的命令格式</td><td>rpm -e filename.rpm</td></tr><tr><td>查询软件描述信息的命令格式</td><td>rpm -qpi filename.rpm</td></tr><tr><td>列出软件文件信息的命令格式</td><td>rpm -qpl filename.rpm</td></tr><tr><td>查询文件属于哪个RPM的命令格式</td><td>rpm -qf filename</td></tr></tbody></table><h4 id="Yum软件仓库"><a href="#Yum软件仓库" class="headerlink" title="Yum软件仓库"></a>Yum软件仓库</h4><blockquote><p>尽管RPM能够帮助用户查询软件相关的依赖关系，但问题还是要运维人员自己来解决，而有些大型软件可能与数十个程序都有依赖关系，在这种情况下安装软件会是非常痛苦的。Yum软件仓库便是为了进一步降低软件安装难度和复杂度而设计的技术。Yum软件仓库可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器下载软件包并安装到系统。</p></blockquote><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>yum repolist all</td><td>列出所有仓库</td></tr><tr><td>yum list all</td><td>列出仓库中所有软件包</td></tr><tr><td>yum info软件包名称</td><td>查看软件包信息</td></tr><tr><td>yum install软件包名称</td><td>安装软件包</td></tr><tr><td>yum reinstall软件包名称</td><td>重新安装软件包</td></tr><tr><td>yum update软件包名称</td><td>升级软件包</td></tr><tr><td>yum remove软件包名称</td><td>移除软件包</td></tr><tr><td>yum clean all</td><td>清除所有仓库缓存</td></tr><tr><td>yum check-update</td><td>检查可更新的软件包</td></tr><tr><td>yum grouplist</td><td>查看系统中已经安装的软件包组</td></tr><tr><td>yum groupinstall软件包组</td><td>安装指定的软件包组</td></tr><tr><td>yum groupremove软件包组</td><td>移除指定的软件包组</td></tr><tr><td>yum groupinfo软件包组</td><td>查询指定的软件包组信息</td></tr></tbody></table><blockquote><p>一般来说市面上常见的Linux系统分为两大类：<br>RH类：Redhat、centOS和Fedora等<br>Debian类：ubuntu、Debian等。<br><strong>上述两类系统对应的包管理工具命令分别是yum和apt-get，而安装包类型则对应为rpm包和deb包。</strong></p></blockquote><h4 id="apg-get常用命令（Ubantu安装deb包）"><a href="#apg-get常用命令（Ubantu安装deb包）" class="headerlink" title="apg-get常用命令（Ubantu安装deb包）"></a>apg-get常用命令（Ubantu安装deb包）</h4><p>在Ubuntu下，apt-get近乎是最常用的shell命令之一了，因为他是Ubuntu通过新立得安装软件的常用工具命令。</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>apt-cache search package</td><td>搜索软件包</td></tr><tr><td>apt-cache show package</td><td>获取包的相关信息，如说明、大小、版本等</td></tr><tr><td>sudo apt-get install package</td><td>安装安装包</td></tr><tr><td>sudo apt-get install package –reinstall</td><td>重新安装包</td></tr><tr><td>sudo apt-get -f install</td><td>修复安装</td></tr><tr><td>sudo apt-get remove package</td><td>删除包</td></tr><tr><td>sudo apt-get remove package –purge</td><td>删除包，包括配置文件等</td></tr><tr><td>sudo apt-get update</td><td>更新源</td></tr><tr><td>sudo apt-get upgrade</td><td>更新已安装的包</td></tr><tr><td>sudo apt-get dist-upgrade</td><td>升级系统</td></tr><tr><td>apt-cache depends package</td><td>了解使用该包依赖那些包</td></tr><tr><td>apt-cache rdepends package</td><td>查看该包被哪些包依赖</td></tr><tr><td>sudo apt-get build-dep package</td><td>安装相关的编译环境</td></tr><tr><td>apt-get source package</td><td>下载该包的源代码</td></tr><tr><td>sudo apt-get clean &amp;&amp; sudo apt-get autoclean</td><td>清理无用的包</td></tr><tr><td>sudo apt-get check</td><td>检查是否有损坏的依赖</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux学习笔记-0（前言）</title>
      <link href="/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-0/"/>
      <url>/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-0/</url>
      <content type="html"><![CDATA[<h4 id="开源软件的特性"><a href="#开源软件的特性" class="headerlink" title="开源软件的特性"></a>开源软件的特性</h4><ol><li>低风险：使用闭源软件无疑把命运交付给他人，一旦封闭的源代码没有人来维护，你将进退维谷；而且相较于商业软件公司，开源社区很少存在倒闭的问题。</li><li>高品质：相较于闭源软件产品，开源项目通常是由开源社区来研发及维护的，参与编写、维护、测试的用户量众多，一般的bug还没有等爆发就已经被修补。</li><li>低成本：开源工作者都是在幕后默默且无偿地付出劳动成果，为美好的世界贡献一份力量，因此使用开源社区推动的软件项目可以节省大量的人力、物力和财力。</li><li>更透明：没有哪个笨蛋会把木马、后门等放到开放的源代码中，这样无疑是把自己的罪行暴露在阳光之下。<blockquote><p>嘻嘻，是不是觉得自己的小项目开源了，就能变成大项目。</p></blockquote></li></ol><h4 id="开源许可协议整理"><a href="#开源许可协议整理" class="headerlink" title="开源许可协议整理"></a>开源许可协议整理</h4><ol><li>GNU GPL（GNU General Public License，GNU通用公共许可证）：只要软件中包含了遵循GPL协议的产品或代码，该软件就必须也遵循GPL许可协议且开源、免费，因此这个协议并不适合商用软件。遵循该协议的开源软件数量极其庞大，包括Linux系统在内的大多数的开源软件都是基于这个协议的。GPL开源许可协议最大的4个特点如下所示。</li></ol><ul><li>复制自由：允许把软件复制到任何人的电脑中，并且不限制复制的数量。</li><li>传播自由：允许软件以各种形式进行传播。</li><li>收费传播：允许在各种媒介上出售该软件，但必须提前让买家知道这个软件是可以免费获得的；因此，一般来讲，开源软件都是通过为用户提供有偿服务的形式来盈利的。</li><li>修改自由：允许开发人员增加或删除软件的功能，但软件修改后必须依然基于GPL许可协议授权。</li></ul><ol start="2"><li>BSD（Berkeley Software Distribution，伯克利软件发布版）许可协议：用户可以使用、修改和重新发布遵循该许可的软件，并且可以将软件作为商业软件发布和销售，前提是需要满足下面3个条件。</li></ol><ul><li>如果再发布的软件中包含源代码，则源代码必须继续遵循BSD许可协议。</li><li>如果再发布的软件中只有二进制程序，则需要在相关文档或版权文件中声明原始代码遵循了BSD协议。</li><li>不允许用原始软件的名字、作者名字或机构名称进行市场推广。</li></ul><ol start="3"><li>Apache许可证版本（Apache License Version）许可协议：在为开发人员提供版权及专利许可的同时，允许用户拥有修改代码及再发布的自由。该许可协议适用于商业软件，现在热门的Hadoop、Apache HTTP Server、MongoDB等项目都是基于该许可协议研发的，程序开发人员在开发遵循该协议的软件时，要严格遵守下面的4个条件。</li></ol><ul><li>该软件及其衍生品必须继续使用Apache许可协议。</li><li>如果修改了程序源代码，需要在文档中进行声明。</li><li>若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。</li><li>如果再发布的软件中有声明文件，则需在此文件中标注Apache许可协议及其他许可协议。</li></ul><ol start="4"><li>MPL（Mozilla Public License，Mozilla公共许可）许可协议：相较于GPL许可协议，MPL更加注重对开发者的源代码需求和收益之间的平衡。</li></ol><ol start="5"><li>MIT（Massachusetts Institute of Technology）许可协议：目前限制最少的开源许可协议之一，只要程序的开发者在修改后的源代码中保留原作者的许可信息即可，因此普遍被商业软件所使用。</li></ol><h4 id="常见的Linux系统版本"><a href="#常见的Linux系统版本" class="headerlink" title="常见的Linux系统版本"></a>常见的Linux系统版本</h4><p>在介绍常见的Linux系统版本之前，首先需要区分Linux系统内核与Linux发行套件系统的不同。</p><ul><li>Linux系统内核指的是一个由Linus Torvalds负责维护，提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。</li><li>Linux发行套件系统(Linux系统)是我们常说的Linux操作系统，也即是由Linux内核与各种常用软件的集合产品。<br>全球大约有数百款的Linux系统版本，每个系统版本都有自己的特性和目标人群，下面将可以从用户的角度选出最热门的几款进行介绍。<ul><li>红帽企业版Linux（RedHat Enterprise Linux，RHEL）：红帽公司是全球最大的开源技术厂商，RHEL是全世界内使用最广泛的Linux系统。</li><li>社区企业操作系统（Community Enterprise Operating System，CentOS）：通过把RHEL系统重新编译并发布给用户免费使用的Linux系统，具有广泛的使用人群。CentOS当前已被红帽公司“收编”。</li><li>Fedora：由红帽公司发布的桌面版系统套件（目前已经不限于桌面版）。用户可免费体验到最新的技术或工具，这些技术或工具在成熟后会被加入到RHEL系统中，因此Fedora也称为RHEL系统的“试验田”。运维人员如果想时刻保持自己的技术领先，就应该多关注此类Linux系统的发展变化及新特性，不断改变自己的学习方向。</li><li>openSUSE：源自德国的一款著名的Linux系统，在全球范围内有着不错的声誉及市场占有率。</li><li>Gentoo：具有极高的自定制性，操作复杂，因此适合有经验的人员使用。</li><li>Debian：稳定性、安全性强，提供了免费的基础支持，可以良好地支持各种硬件架构，以及提供近十万种不同的开源软件，在国外拥有很高的认可度和使用率。</li><li>Ubuntu：是一款派生自Debian的操作系统，对新款硬件具有极强的兼容能力。Ubuntu与Fedora都是极其出色的Linux桌面系统，而且Ubuntu也可用于服务器领域。</li></ul></li></ul>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客搭建记录(coding Pages 配合 hexo搭建博客)))</title>
      <link href="/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>博客基于： <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a><br>托管： <a href="https://coding.net/" target="_blank" rel="noopener">Coding Page</a><br>主题： <a href="https://material.viosey.com/docs/" target="_blank" rel="noopener">Material</a></p><h4 id="安装流程解释："><a href="#安装流程解释：" class="headerlink" title="安装流程解释："></a>安装流程解释：</h4><ol><li>安装git、nodejs（npm）.</li><li>安装下载hexo</li><li>找一个舒服的主题（可以在github上找，也可以在官网上找）</li><li>coding账号注册，生成本地公钥并添加到平台</li><li>coding创建一个公开项目，部署pages服务</li><li>hexo和主题的本地配置 （最主要的步骤）</li></ol><blockquote><p>感悟：hexo的官方文档没必要全看，基本不用看，能用到的命令不多，稍后列举，感觉他的文档是写给主题开发者看的。主要是主题和系统的主题文件的配置，下发附完整配置文件</p></blockquote><h4 id="常用的hexo命令："><a href="#常用的hexo命令：" class="headerlink" title="常用的hexo命令："></a>常用的hexo命令：</h4><ol><li>启动服务，预览效果： hexo s</li><li>清除缓存： hexo clean</li><li>生成网页文件： hexo g<br>上传到git服务： hexo d<br>先生成，再上传部署： hexo g -d</li></ol><h4 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h4><ol><li>hexo d后 ERROR Deployer not found: git</li></ol><pre><code>    npm install --save hexo-deployer-git</code></pre><ol start="2"><li>文章置顶插件</li></ol><pre><code>    npm install hexo-helper-post-top --save</code></pre><ol start="3"><li>本地站内搜索</li></ol><pre><code>    npm install hexo-generator-search --save</code></pre><blockquote><p>系统配置文件中添加：<br>    search:<br>        path: search.xml<br>        field: all</p></blockquote><ol start="4"><li>主题1.5.5+ 存在BUG，执行hexo s 和 hexo g 都有报错。</li></ol><blockquote><p>修改文件 /media/arley/数据资料/Blog/i7xy/themes/material/layout/_widget/dnsprefetch.ejs</p></blockquote><pre><code>    &lt;% } else if(theme.comment.use.startsWith(&quot;disqus&quot;)) { %&gt;    // to    &lt;% } else if(theme.comment.use &amp;&amp; theme.comment.use.startsWith(&quot;disqus&quot;)) { %&gt;</code></pre><h4 id="主题完整配置文件："><a href="#主题完整配置文件：" class="headerlink" title="主题完整配置文件："></a>主题完整配置文件：</h4><blockquote><p>themes/material/_config.yml</p></blockquote><pre><code># ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# Head infohead:    favicon: &quot;/img/favicon.png&quot;    high_res_favicon: &quot;/img/logo.png&quot;    apple_touch_icon: &quot;/img/logo.png&quot;    keywords: Arley&#39;s Blog,小磊同学,郭磊博客,郭磊技术分享,小程序博客,前端技术博客    site_verification:        google:        baidu: RX4cJpJSKB    # Enable generate structured-data as JSON+LD for SEO or not.    #    Set as &#39;false&#39; if it cause some wrong when `hexo g`.    structured_data: true# Jump Links Settingsurl:    rss:    daily_pic: &quot;#&quot;    logo: &quot;#&quot;# ---------------------------------------------------------------# Style Settings# ---------------------------------------------------------------# Schemesscheme: Paradox#scheme: Isolation# UI &amp; UX: slogan, color, effectuiux:    slogan: &quot;学不思罔，思不学殆&quot;    #theme_color: &quot;#0097A7&quot;    theme_color: &quot;#619DDE&quot;    theme_sub_color: &quot;#89B6EB&quot;    hyperlink_color: &quot;#619DDE&quot;    button_color: &quot;#595959&quot;    android_chrome_color: &quot;#619DDE&quot;    nprogress_color: &quot;#29d&quot;    nprogress_buffer: &quot;800&quot;# JS Effect Switchesjs_effect:    fade: true    smoothscroll: true# Reading experiencereading:    entry_excerpt: 80# Thumbnail Settingsthumbnail:    purecolor:    random_amount: 19# Background Settings# bing available parameter:#    new | color= | type=#        color available value: black, blue, brown, green, multi, orange, pink, purple, red, white, yellow#        type available value: A (animal), C (culture), N (nature), S (space), T (travel)background:    purecolor: &quot;#f8f8f8&quot;    #bgimg: &quot;/img/bg.png&quot;    bing:        enable: false        parameter:# Images Settingsimg:    logo: &quot;/img/logo.png&quot;    avatar: &quot;/img/avatar.png&quot;    daily_pic: &quot;/img/daily_pic.jpg&quot;    sidebar_header: &quot;/img/sidebar_header.png&quot;    random_thumbnail: &quot;/img/random/material-&quot;    footer_image:        #upyun_logo:            #link: &quot;https://www.upyun.com/&quot;            #src: &quot;/img/upyun_logo.svg&quot;# Custom Fonts#    family: the font-family which will be used in the theme#    use: uri of fonts host.#        Available value: google | baomitu | ustc | custom | catnet#        - When you set as &#39;custom&#39;, you should fill in the value of &#39;custom_font_host&#39;, which should be a mirror of google fonts.#        - If you have setup your custom font-family, don&#39;t forget to add style tag with @font-face or link.tag with font css#          to /source/data/head.yml as custom code, to load custom font files.fonts:    family: Roboto, &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;微软雅黑&quot;, Arial, sans-serif    use: google    custom_font_host:# Card Elevation Levelcard_elevation: 2# Copyright# Specify the date when the site was setup.#    For example, if you set it as 2015, then footer will show &#39;© 2015 - 2017&#39;copyright_since: 2016# Footer Text# You can specify the text you want to show in footer, HTML tag is supported.#   For example, you can setup ICP license number as:#       &#39;&lt;a href=&quot;http://www.miitbeian.gov.cn&quot; rel=&quot;nofollow&quot;&gt;某ICP备xxxxxxxx号-x&lt;/a&gt;&#39;footer_text:# Qrcode for redirect at other device#    use: choose which method to generate the qrcode for each posts.#        Available value: plugin | online#            - When use &quot;plugin&quot;, you need to install the hexo-helper-qrcode.#            - When use &quot;online&quot;, the qrcode will be generated by &#39;pan.baidu.com&#39; in China.qrcode:    enable: true    use: plugin# Code highlight# You can only enable one of them to avoid issues.# Also you need to disable highlight option in hexo&#39;s _config.yml.##    Prettify#        theme: # Available value in /source/css/prettify/[theme].min.cssprettify:    enable: true    theme: &quot;atelier-estuary-light&quot;## theme: &quot;atelier-estuary-light&quot; #    Hanabi (https://github.com/egoist/hanabi)#        line_number: [true/false] # Show line number for code block#        includeDefaultColors: [true/false] # Use default hanabi colors#        customColors: This value accept a string or am array to setting for hanabi colors.#                    - If `includeDefaultColors` is true, this will append colors to the color pool#                    - If `includeDefaultColors` is false, this will instead default color poolhanabi:    enable: false    line_number: true    includeDefaultColors: true    customColors:# Post License# You can specify the text you want to show in the end of your posts and pages, HTML tag is supported.#   For example, you can setup a CC license as:#       &#39;This blog is under a &lt;a href=&quot;/creativecommons.html&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 3.0 Unported License&lt;/a&gt;&#39;# You can also use Front-Matter `license` to override this setting.license: &#39;本文作者：&lt;a href=&quot;https://i7xy.cn&quot; target=&quot;_blank&quot;&gt;Arley&lt;/a&gt;  &lt;br&gt;  本文采用 &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 3.0 Unported License&lt;/a&gt; 协议进行许可&#39;# Gallery Panel# You must activate Formspree before usinggallery:    panel_show: true    left_show: true    left_title: Introduction    left_info: This is a Example.    right_show: true    right_title: Get in touch# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# TOC Buttontoc:#   use: choose whether the line_number of toc will show or not.#       Available value of &quot;linenumber&quot;: true | false    linenumber: true# SNS Menusns:    email: 34805850@qq.com    facebook:    twitter:    googleplus:    weibo:    instagram:    tumblr:    github:    linkedin:    zhihu:    bilibili:    telegram:    v2ex:    segmentfault:# SNS Share Switchsns_share:    twitter: false    facebook: false    googleplus: false    weibo: true    linkedin: false    qq: true    telegram: false# Sidebar Customizesidebar:    dropdown:        Email Me:            link: &quot;mailto:34805850@qq.com&quot;            icon: email    homepage:        use: true        icon: home        divider: false    archives:        use: true        icon: inbox        divider: false    categories:        use: true        icon: chrome_reader_mode        divider: true    pages:        相册:            link: &quot;/gallery&quot;            icon: photo            divider: false        标签云:            link: &quot;/tags&quot;            icon: book            divider: false        时间轴:            link: &quot;/timeline&quot;            icon: timeline            divider: false        关于:            link: &quot;/about&quot;            icon: person            divider: false    article_num:        use: true        divider: false    footer:        divider: false        theme: false        support: false        feedback: false        material: false# ---------------------------------------------------------------# Integrated Services# ---------------------------------------------------------------# Comment Systems# Available value of &quot;use&quot;:#     disqus | disqus_click | changyan | livere | gitment | gitalk | valine | wildfire# If you want to use gitment or gitalk,you should get the client_id and client_secret from https://github.com/settings/applications/new# If you want to use valine,you should get the app_id and app_key from https://leancloud.cn ,more setting please see https://valine.js.orgcomment:    use: changyan    shortname: # duoshuo or disqus shortname    changyan_appid: cytKUOEJj    changyan_conf: prod_xxxxxxxxxxxxxxxxxxx    changyan_thread_key_type: path    livere_data_uid:    gitment_repo:   # git repo of the hexo    gitment_owner:  # git repo&#39;s owner    gitment_client_id:  # github app client id    gitment_client_secret :  # github app client secret    valine_leancloud_appId:  # leancloud application app id    valine_leancloud_appKey:  # leancloud application app key    valine_notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki    valine_verify: false # valine verify code (true/false)    valine_pageSize: 10 # comment list page size    valine_avatar: identicon # gravatar style https://valine.js.org/#/avatar    valine_lang: zh-cn # i18n    valine_placeholder: Just go go # valine comment input placeholder(like: Please leave your footprints )    valine_guest_info: nick,mail,link #valine comment header info    gitalk_repo: # git repo of the hexo    gitalk_owner: # git repo&#39;s owner    gitalk_client_id: # github app client id    gitalk_client_secret: # github app client secret    wildfire_database_provider: firebase # firebase or wilddog    wildfire_wilddog_site_id:    wildfire_firebase_api_key:    wildfire_firebase_auth_domain:    wildfire_firebase_database_url:    wildfire_firebase_project_id:    wildfire_firebase_storage_bucket:    wildfire_firebase_messaging_sender_id:    wildfire_theme: light # light or dark    wildfire_locale: en # en or zh-CN# Search Systems# Available value:#     swiftype | google | localsearch:    use: local    swiftype_key:# Analytics Systems# Available value:#     baidu | google | cnzzanalytics:    google_site_id:    baidu_site_id:    cnzz_site_id: 1274340778# Leancloud Viewsleancloud:    enable: false    app_id: #你的 app_id    app_key: #你的 app_key    av_core_mini: &quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;# Busuanzi 不蒜子 Viewsbusuanzi:    enable: false    all_site_uv: false    post_pv: false    busuanzi_pure_mini_js: &quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;# Files Vendors# Set a CDN for the files src you want to customize. The url should with protocol.# Default(empty) will load the files from the origin server.vendors:# MaterialCDN#   You can load theme unique files from your private cdn or oss.#   The new src will have the base domain you configured below.#   For example#       materialcdn: https://cdn.jsdelivr.net/npm/hexo-material@1.4.0/source    materialcdn:# Third party library#   You can load these files from public cdn.#   For example#       jquery: https://cdn.bootcss.com/jquery/2.2.1/jquery.js    # jQuery 2.2.0    jquery:    # nprogress 0.2.0    nprogress:    # FontAwesome 4.5.0    fontawesome:    # MathJax 2.7.0-2.7.1    mathjax:    # Prettify r298 (only prettify.js)    prettify:    # Material Icons 3.0.1    material_icons:</code></pre><h4 id="Hexo系统配置文件"><a href="#Hexo系统配置文件" class="headerlink" title="Hexo系统配置文件"></a>Hexo系统配置文件</h4><blockquote><p>hexo博客主目录/_config.yml</p></blockquote><pre><code># Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Arley&#39;s Blog (小磊同学博客)subtitle: 学而不思则罔,思而不学则殆description: 小程序全栈开发者/伪极客/灵魂摄影师，热爱技术&amp;生活，很高兴能在这里与你分享我对技术和生活的思考。keywords: Arley&#39;s Blog,小磊同学,郭磊博客,郭磊技术分享,小程序博客,前端技术博客author: Arleylanguage: zh-CNtimezone:# URL## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: https://i7xy.cnroot: /permalink: :title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:  enable: false  line_number: true  auto_detect: false  tab_replace:# Home page setting# path: Root path for your blogs index page. (default = &#39;&#39;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &#39;&#39;  per_page: 10  order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: material# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: git@git.coding.net:q34805850/arleyX.git  branch: mastersearch:    path: search.xml    field: all</code></pre>]]></content>
      
      <categories>
          
          <category> 技巧备份 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MFC数据结构课程设计 Jg考试管理系统</title>
      <link href="/MFC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1-Jg%E8%80%83%E8%AF%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/MFC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1-Jg%E8%80%83%E8%AF%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<h3 id="设计题目与环境"><a href="#设计题目与环境" class="headerlink" title="设计题目与环境"></a>设计题目与环境</h3><ol><li>课设主题：Jg考试系统学生端 （基于MFC实现 ，链表读取信息 + INI配置文件本地存储库）</li><li>设计内容：</li></ol><ul><li>学生用户的登录 - 本地存有500+模拟的学生信息，支持所有账号的登录验证判断。（详细请阅读概要设计）</li><li>学生信息的读取，登录成功之后获取学生的所有信息进行显示。</li><li>账号密码的修改</li><li>在题库里面随机抽取题目（两种题型，可以自定义题目数量），组合成随机试题进行显示。</li></ul><ol start="3"><li>开发环境：Microsoft Visual Studio 2017 Community（ VS2017 社区版 ）,Windows 10</li><li>备注：可执行编译程序 在 \源程序\JgManage.exe （同级目录下包含配置数据 - INI），测试账号密码：201607014334 ,默认密码是学号。</li><li>部分学习参考技术博客：</li></ol><blockquote><p>○MFC更换窗口图标 - CSDN博客<br>○基于对话框、单文档、多文档区别 - CSDN博客<br>○MFC的使用——在共享DLL中使用MFC、在静态库中使用MFC - CSDN博客<br>○黑马程序员MFC教程（已完结）<em>哔哩哔哩 (゜-゜)つロ 干杯~-bilibili<br>○MFC运行时窗口总是最小化，不直接弹出 - CSDN博客<br>○MFC中全局变量的定义及使用 - lingyun1120 - 博客园<br>○UpdateData()用法 - CSDN博客<br>○C/C++ 关于如何读写ini配置文件 （小结） - IT-渡子腾 - 博客园<br>○MFC下MD5加密算法实现 - Lxsec - 博客园<br>○c\c++中比较两个字符串或string对象是否相等 - CSDN博客<br>○MFC对话框程序按回车后程序退出的解决办法 - CSDN博客<br>○[MFC开发经验(6)] 对话框之间传递数据[TZZ]</em>百度经验<br>○c++多个文件中如何共用一个全局变量 - invisible_man - 博客园<br>○MFC中的模态对话框与非模态对话框 - xiaoluo91 - 博客园<br>○VC++ 中 int类型转换 LPCTSTR类型 几种方法 - CSDN博客<br>○VS2010/MFC编程入门之二十九（常用控件：列表视图控件List Control 下）-鸡啄米VS2010/MFC教程-鸡啄米编程课堂<br>○MFC ListControl用法 - 疯狂的癫子 - 博客园<br>○【MFC-12】VS2010/MFC之列表框控件动态编辑（List Control Edit） - CSDN博客<br>○C++将数组的元素顺序随机打乱(条件概率证明算法充分随机) - CSDN博客<br>○C++ STL标准模板库（list） - 寒魔影 - 博客园</p></blockquote><h3 id="概要设计"><a href="#概要设计" class="headerlink" title="概要设计"></a>概要设计</h3><ol><li>文件、类及配置项解释</li><li>配置文件解释 - *.ini（本地数据存储/读写）<br>ini文件由节、键、值组成，通过文件的节和键定位到数据值。比如：<br>user.ini （用户信息存储文件）中，通过节（201607014334）和键（name）定位到值郭磊。</li></ol><p>[201607014334]<br>name=郭磊<br>password=8bcb8649d217d582b9bd9d6de365d554<br>academy=计算机学院<br>major=计算机科学与技术<br>grade=计科B163<br>sex=男<br>qq=34805850<br>type=student<br>score=0<br>[XXX]<br>name=xxx<br>………………</p><p>通过c++的GetPrivateProfileString（读配置）和WritePrivateProfileString（写配置），可以快速高效便捷的对数据进行存储。</p><h3 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h3><ol><li>文件列表<br><img src="https://i.imgur.com/lITGUK8.png" alt="文件列表"></li><li>运行截图</li></ol><p><img src="https://i.imgur.com/ZfM0RcK.png" alt="登录界面"><br><img src="https://i.imgur.com/RXp3yq6.png" alt="信息界面"><br><img src="https://i.imgur.com/dsVsOsy.png" alt="题目随机出题界面"></p><h3 id="完整代码下载："><a href="#完整代码下载：" class="headerlink" title="完整代码下载："></a>完整代码下载：</h3><p><a href="https://pan.baidu.com/s/1mVO0ILkDad3qmr0-6V2rMQ" title="完整代码下载" target="_blank" rel="noopener">https://pan.baidu.com/s/1mVO0ILkDad3qmr0-6V2rMQ</a></p>]]></content>
      
      <categories>
          
          <category> 课设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课设 </tag>
            
            <tag> 其他语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>汇编语言 - 课程设计（大二下）</title>
      <link href="/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%A4%A7%E4%BA%8C%E4%B8%8B%EF%BC%89/"/>
      <url>/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80-%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%A4%A7%E4%BA%8C%E4%B8%8B%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="一、-实验目的"><a href="#一、-实验目的" class="headerlink" title="一、 实验目的"></a>一、 实验目的</h2><p>进行汇编语言程序设计应用的综合性训练。综合运用汇编语言循环程序、子程序、宏指令编程方法，提高汇编语言程序设计能力的应用水平。</p><h2 id="二、-设备与环境"><a href="#二、-设备与环境" class="headerlink" title="二、 设备与环境"></a>二、 设备与环境</h2><p>PC兼容机、Windows操作系统、汇编程序masm for windows 2015</p><h2 id="三、实验内容"><a href="#三、实验内容" class="headerlink" title="三、实验内容"></a>三、实验内容</h2><p>编写程序，从键盘输入某班学生的姓名、成绩，对学生的成绩进行排序，最后把姓名、学生成绩、名次显示出来。</p><h2 id="四、实验要求："><a href="#四、实验要求：" class="headerlink" title="四、实验要求："></a>四、实验要求：</h2><ol><li>本程序要求涉及汇编语言的分支、多重循环、子程序及宏，其中 成绩输入、计算学生名次、显示学生名次等都分别用子程序，也可用宏处理。</li><li>要求用菜单选择。具体要求：<ul><li>输入序号1：是数据录入并输出（包括姓名、成绩 - 多了一个学号.）；</li><li>输入序号2：是排序后的数据输出（包括姓名、成绩、名次）；</li><li>输入序号3：是可以按姓名查找某学生，并输出其成绩，选择修改或不改成绩，（此项可以选做，选做此项的加分）。</li></ul></li></ol><blockquote><p>注意：完成综合实验的最低要求是：录入不定位数的成绩并排序，所有数据录入必须有合法性判断，如成绩输入，判断成绩是否为数值，是否在0~100之间等。</p></blockquote><h2 id="五、完整代码"><a href="#五、完整代码" class="headerlink" title="五、完整代码"></a>五、完整代码</h2><pre><code>DATAS SEGMENT    MaxPeopleNum equ 4 //最大输入的人数    nameLen equ 10 //姓名可输入长度    scoreLen equ 4 //分数可输入长度    numLen equ 4 //学号可输入长度    debug db 10,13,&quot;#################################&quot;,10,13 //判断是否运行到    //-------------------MSG-------------------    menu db 10,13,&quot;####################################################&quot;,10,13            db  &quot;   [ Ncist Student&#39;s Score Manage BY MASM ]&quot;,10,13,&quot;You Can Input [ 1-4 ] To Choice The Function.&quot;,10,13,&quot;1. Input Student.(Name and Score)&quot;,10,13,&quot;2. Show Score Sorting result.&quot;,10,13,&quot;3. Search Score BY Name.&quot;,10,13,&quot;4. Quit The APP.&quot;,10,13,&quot;Please Input a Number:$&quot;    errorMsg db 10,13,&quot;Please Input 1-4:$&quot;    numMsg db 10,13,&quot;number:$&quot;    nameMsg db 10,13,&quot;Name:$&quot;    scoreMsg db 10,13,&quot;Score:$&quot;    continueMsg db 10,13,&quot;Whether to continue to input students(Y/N):$&quot;    lineN db 10,13,&quot;$&quot; //换行    toMax db 10,13,&quot;ERROR : To maximum input,You Can Change MaxPeopleNum To Input More.&quot;,10,13,&quot;$&quot; //达到最大存储数 count&lt;MaxPeopleNum 的提示语句    noBodyMsg db 10,13,&quot;noBody...&quot;,10,13,&quot;$&quot;    inputNameMsg db 10,13                 db &quot;Please input a name to search:$&quot;    nameScoreMsg db 10,13,&quot;The student Score is:$&quot;    notFindMsg db 10,13,&quot;Not Find The Student!&quot;,10,13,&quot;$&quot;    changeMsg db 10,13,&quot;Do you want to change the student&#39;s Score:(Y/N):$&quot;    topHead db 10,13,&quot; - -[ Report cards ]- -&quot;,10,13,&quot;number   name         score&quot;,10,13,&quot;$&quot;    T db &quot; $&quot; //空格 用来制表    ten db 10    //缓冲区有四个要点：类型，缓冲区容量，元素个数，元素。如BUF1  DB  6,？,6 DUP（？）就是说缓冲区的容量为6（第一个6），第一个问号是指用户在实际过程中输入的元素个数，但个数必须不大于5（最后一个单元被回车占用）。后面就是输入的元素。所以BUF1+1是指的第一个问号，即缓冲区中实际的元素个数。    buffName db nameLen,?,nameLen dup(?)//姓名缓冲区    buffScore db scoreLen,?,scoreLen dup(?)//成绩缓冲区    buffNum db numLen,?,numLen dup(?)//学号缓冲区 学号可输入3位    nameArr db MaxPeopleNum dup (nameLen dup (?))//一个姓名最大输入字符为10    //nameArr db 61h,9 dup (?),62h,9 dup (?),63h,9 dup (?) //a b c    scoreArr db MaxPeopleNum dup (scoreLen dup (0))//分数区间为0-100    //scoreArr db 31h,30h,30h,00h,39h,30h,00h,00h,38h,30h,00h,00h// 100 90 80    numberArr db MaxPeopleNum dup (numLen dup (0))//学号区间0-9999    count dw 0//计数       //count dw 3       comFlag db ? //搜索比较标志符    //将存为字符串的成绩转为整数型，并保存。便于冒泡排序。    i db MaxPeopleNum dup(?)DATAS ENDSSTACKS SEGMENT    //此处输入堆栈段代码STACKS ENDSCODES SEGMENT    ASSUME CS:CODES,DS:DATAS,SS:STACKS,ES:DATAS//打印字符串宏PRINT macro opr    PUSH DX    PUSH AX    LEA DX,opr    MOV AH,9    INT 21H    POP AX    POP DXendm//----------------------------//输入字符串，转存宏cinStr macro HuanChongQu,Arr    MOV AH,10    LEA DX,HuanChongQu    INT 21H    //删除末尾回车    MOV AL,HuanChongQu+1//获取输入了多少字符    ADD AL,2//输入的字符数目+2    MOV AH,0    MOV SI,AX    mov HuanChongQu[SI],0    //转存数据到非缓冲区    SUB AX,2    mov CX,AX    lea si,HuanChongQu+2    lea di,Arr    cld    rep movsbendmSTART:    MOV AX,DATAS    MOV DS,AX    MOV ES,AX    //此处输入代码段代码    //jmp searchScoreByName //测试搜索    call showMenu    jmp exit//-----------------------//显示菜单函数showMenu proc     PRINT menu    InputChoise:    MOV AH,1    INT 21H    .IF AL&lt;31H || AL&gt;34H        PRINT errorMsg        JMP InputChoise    .ENDIF    //输入1    .IF AL == 31H        jmp InputStudentInfo    .ENDIF    //输入2    .IF AL == 32H        jmp StrToInt        //jmp printAllStudent    .ENDIF    //输入3    .IF AL == 33H        mov cx,count        .IF cx&gt;0            jmp searchScoreByName        .ELSE            PRINT noBodyMsg            call showMenu        .ENDIF    .ENDIF    //输入4    .IF AL == 34H        jmp exit    .ENDIF    RETshowMenu endp//-----------------------//输入学生信息InputStudentInfo:    PRINT numMsg    MOV AX,numLen    MUL count    MOV DI,AX    cinStr buffNum,numberArr[DI]    PRINT nameMsg    MOV AX,nameLen    MUL count    MOV DI,AX    cinStr buffName,nameArr[DI]    PRINT scoreMsg    MOV AX,scoreLen    MUL count    MOV DI,AX    cinStr buffScore,scoreArr[DI]    INC count    .IF count&lt;MaxPeopleNum        PRINT continueMsg    .ELSE        PRINT toMax        call showMenu    .ENDIF    MOV AH,1    INT 21H    .IF AL==&#39;Y&#39; || AL==&#39;y&#39;        jmp InputStudentInfo    .ELSE        PRINT lineN //换行        call showMenu    .ENDIF//----------------------------------//打印当前所有学生信息printAllStudent:    PRINT topHead    //MOV CX,count //获取学生人数    MOV BX,countPrintBegin:    //当前是第几个循环    //MOV BX,CX    SUB BX,1    //PUSH CX    //打印学号    MOV CX,numLen    MOV AX,numLen    MUL BX    MOV DI,AX    PRINT T //打印空格 用来制表printNum:    MOV DL,numberArr[DI]    MOV AH,2    INT 21H    INC DI    loop printNum    //打印n个空格  让后面的名字对齐    PRINT T    PRINT T    PRINT T    PRINT T    //打印name    MOV CX,nameLen    MOV AX,nameLen    MUL BX    MOV DI,AXprintName:    MOV DL,nameArr[DI]    MOV AH,2    INT 21H    INC DI    loop printName    //打印n个空格  让后面的名字对齐    PRINT T    PRINT T    PRINT T    PRINT T    //打印Score    MOV CX,scoreLen    MOV AX,scoreLen    MUL BX    MOV DI,AXprintScore:    MOV DL,scoreArr[DI]    MOV AH,2    INT 21H    INC DI    loop printScore    PRINT lineN    //POP CX    //loop PrintBegin 太长 跳不回去了 换代码。    //SUB CX,1    CMP BX,0    JNE PrintBegin    mov si,0    mov cx,MaxPeopleNumChongZhiI:        mov i[si],00h    inc si    loop ChongZhiI                    call showMenu//--------------------------//---- StrToInt-&gt;冒泡排序-&gt;打印 //将成绩字符串转为整数型保存 //成功将字符串转整数存储到db位 整数，可用于比较排序StrToInt:    MOV CX,count    mov di,0    mov si,0    mov bl,0        .IF CX&gt;0        .WHILE CX&gt;0            //94  39h,34h,00h            .repeat                mov dl,scoreArr[di]                sub dl,30h                mov al,bl   //i[si] //----------有毒                mul ten                add al,dl                mov i[si],al                mov bl,al                inc di                mov bh,scoreArr[di]            .until bh == 00h               .repeat                   inc di                mov bh,scoreArr[di]                .until bh != 00h              mov bl,0                inc si            //inc di            dec CX        .ENDW            jmp rankIByMaoPao    .ELSE        PRINT noBodyMsg        call showMenu    .ENDIF//-------------------------------------------------//对I 进行冒泡排序，移动其他存储位置rankIByMaoPao:    mov cx,count //cx = 输入的数字  比如输入了4个数,外循环则应该循环3次  当cx&gt;0     dec cx  //cx = 3   条件 3 2 1    mov bx,0    .WHILE CX&gt;0  // 3,2,1        inc bx //当前外循环次数        mov ax,count  //ax = 4        sub ax,bx      //ax = 4 - 0 = 4        //dec ax //ax - 1        PUSH BX        PUSH CX //3        mov si,0        mov di,1        mov cx,0        .WHILE CX &lt; ax  //0 &lt; 3   //应该循环3次 0,1,2            PUSH AX            mov dh,i[si]//i 94  i            mov dl, i[di]//i+1 100            .IF dh &gt; dl  //&lt; 从小到大输出   &gt;从大到小输出                mov i[si],dl                mov i[di],dh                //学号字符串交换                PUSH CX                PUSH DX                mov cl,numLen                mov dx,0                .WHILE cl&gt;0                    push bx                    push ax                    //si = si*numLen + ch                    //di = di*numLen + ch                    mov ch,numLen                    mov ax,si                    mul ch                    add ax,dx                    PUSH SI                    mov SI,ax                    mov bh,numberArr[si]                    mov ax,di                    mul ch                    add ax,dx                    PUSH DI                    MOV DI,ax                    mov bl,numberArr[di]                    mov numberArr[si],bl                    mov numberArr[di],bh                    POP DI                    POP SI                    pop ax                    pop bx                    inc dx                    dec cl                    .ENDW                POP DX                POP CX                //-----学号排序重组完毕-------                //姓名字符串交换                PUSH CX                PUSH DX                mov cl,nameLen                mov dx,0                .WHILE cl&gt;0                    push bx                    push ax                    //si = si*numLen + ch                    //di = di*numLen + ch                    mov ch,nameLen                    mov ax,si                    mul ch                    add ax,dx                    PUSH SI                    mov SI,ax                    mov bh,nameArr[si]                    mov ax,di                    mul ch                    add ax,dx                    PUSH DI                    MOV DI,ax                    mov bl,nameArr[di]                    mov nameArr[si],bl                    mov nameArr[di],bh                    POP DI                    POP SI                    pop ax                    pop bx                    inc dx                    dec cl                    .ENDW                POP DX                POP CX                //-----姓名排序重组完毕-------                //成绩字符串交换                PUSH CX                PUSH DX                mov cl,scoreLen                mov dx,0                .WHILE cl&gt;0                    push bx                    push ax                    //si = si*numLen + ch                    //di = di*numLen + ch                    mov ch,scoreLen                    mov ax,si                    mul ch                    add ax,dx                    PUSH SI                    mov SI,ax                    mov bh,scoreArr[si]                    mov ax,di                    mul ch                    add ax,dx                    PUSH DI                    MOV DI,ax                    mov bl,scoreArr[di]                    mov scoreArr[si],bl                    mov scoreArr[di],bh                    POP DI                    POP SI                    pop ax                    pop bx                    inc dx                    dec cl                    .ENDW                POP DX                POP CX                //-----学号排序重组完毕-------            .ENDIF            inc si            inc di            inc cx            POP AX        .ENDW    POP CX    POP BX    dec CX    .ENDW    jmp printAllStudent//-------------------------------------------------searchScoreByName:    PRINT inputNameMsg    MOV AH,10    LEA DX,buffName    INT 21H    MOV DH,0    MOV DL,buffName+1//获取输入了多少字符    //输出输入了的字符数目  比如nihao = 5    //add DL,30H    //MOV AH,2    //INT 21H    //思路：第一个外循环 循环总共目前有的学生数目，即 count；内循环去进行字符串比较    mov cx,count    mov bx,0    searchBegin:        PUSH CX        PUSH BX        PUSH DX        mov comFlag,0 //初始化为0        mov bp,bx //bp        mov ax,nameLen        mul bp        mov bp,ax //----bp数组开头位置        POP DX        mov cx,dx  //输入了多少个字符        mov si,2 //输入的buff 从 第二位开始取        .WHILE cx&gt;0            mov bl,buffName[si] //输入的字符            mov bh,nameArr[bp]            .IF bl!=bh//   字符串相等,继续循环比较 ---- 字符串不相等,跳出本次比较                 mov comFlag,1                .BREAK //跳出循环,字符串不相等,cx!=0            .ENDIF            inc bp            inc si            dec cx        .ENDW        POP BX    .IF comFlag==1  //comFlag = 1为不相等        //mov dl,&#39;n&#39; //此次比较字符串不相等        //当 比较次数 BX等于count 说明比较完所有人的了        push dx        mov dx,count        dec dx        .IF bx==dx            PRINT notFindMsg            call showMenu        .ENDIF        pop dx    .ELSE        PRINT nameScoreMsg        //mov dl,&#39;y&#39; //字符串相等，记录下位置 位置为当前循环次数 BX        //获取这个人的分数        push ax        mov ax,scoreLen        mul bx        //位置在ax        push cx        MOV CX,scoreLen        MOV DI,AX    printSearchScore:        MOV DL,scoreArr[DI]        MOV AH,2        INT 21H        INC DI    loop printSearchScore        //询问是否修改        PRINT changeMsg        MOV AH,1        INT 21H        .IF AL==&#39;Y&#39; || AL==&#39;y&#39;            //要修改            PRINT scoreMsg            MOV AX,scoreLen //有一个bug  三位数成绩改成2位数 最后一个0还在            MUL bx            MOV DI,AX            cinStr buffScore,scoreArr[DI]        .ELSE            PRINT lineN //换行            call showMenu        .ENDIF        pop cx        pop ax        jmp comOver    .ENDIF        POP CX        inc bx //从0开始计次    //loop searchBegin  //多了一行代码就跳不回去了 烦躁    dec cx    cmp cx,0    jne searchBegincomOver:        call showMenuexit:    MOV AH,4CH    INT 21HCODES ENDS    END START</code></pre><blockquote><p>复制之后请替换” // “为” ; “ ,汇编语言的注释，和其他语言不同。</p></blockquote><h2 id="六、运行结果"><a href="#六、运行结果" class="headerlink" title="六、运行结果"></a>六、运行结果</h2><p><img src="https://i.imgur.com/fqTmTWN.png" alt=""><br><img src="https://i.imgur.com/1KyKGLK.png" alt=""><br><img src="https://i.imgur.com/fybCf2U.png" alt=""><br><img src="https://i.imgur.com/QAU7zmV.png" alt=""><br><img src="https://i.imgur.com/r4pqKSQ.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 课设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课设 </tag>
            
            <tag> 其他语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>https环境搭建-基于phpstudy(Apache)</title>
      <link href="/https%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8Ephpstudy-Apache/"/>
      <url>/https%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E5%9F%BA%E4%BA%8Ephpstudy-Apache/</url>
      <content type="html"><![CDATA[<p>编辑Apache根目录下 conf/httpd.conf 文件，<br>找到 #LoadModule ssl_module modules/mod_ssl.so 和 #Include conf/extra/httpd-ssl.conf，去掉前面的#号注释；<br>编辑Apache根目录下 conf/extra/httpd-ssl.conf 文件，修改为httpd-ssl.conf内的文本</p><p>备注：1.证书名字别太长 别带.  现在用的是123</p><blockquote><p>httpd-ssl.conf 如下</p></blockquote><pre><code>Listen 443&lt;VirtualHost *:443&gt;    DocumentRoot &quot;C:\web\apiErYa&quot;    ServerName api.alishenshen.cn    ServerAlias    SSLEngine on    SSLProtocol TLSv1 TLSv1.1 TLSv1.2    SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5    SSLCertificateFile &quot;C:\phpStudy\PHPTutorial\Apache\cert\2.crt&quot;    SSLCertificateKeyFile &quot;C:\phpStudy\PHPTutorial\Apache\cert\3.key&quot;    SSLCertificateChainFile &quot;C:\phpStudy\PHPTutorial\Apache\cert\1.crt&quot;  &lt;Directory &quot;C:\web\apiErYa&quot;&gt;      Options +Indexes +FollowSymLinks +ExecCGI      AllowOverride All      Order allow,deny      Allow from all      Require all granted  &lt;/Directory&gt;&lt;/VirtualHost&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 技巧备份 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>Arley&#39;s About</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>Arley&#39;s Inc</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>标签云</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>时间轴</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
